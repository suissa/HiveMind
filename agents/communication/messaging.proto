syntax = "proto3";

package communication;

option go_package = "agents/communication";

// Serviço de mensagens
service Messaging {
  // Publica uma mensagem
  rpc Publish(Message) returns (PublishResponse) {}
  
  // Faz uma requisição e aguarda resposta
  rpc Request(RequestMessage) returns (Message) {}
  
  // Adiciona uma inscrição em um tópico
  rpc AddSubscription(SubscribeRequest) returns (SubscribeResponse) {}
  
  // Remove uma inscrição de um tópico
  rpc RemoveSubscription(UnsubscribeRequest) returns (UnsubscribeResponse) {}
  
  // Stream de mensagens recebidas
  rpc Subscribe(SubscribeRequest) returns (stream Message) {}
}

// Mensagem básica
message Message {
  string subject = 1;
  bytes data = 2;
  int64 timestamp = 3;
  string id = 4;
  map<string, string> metadata = 5;
  string reply_to = 6;
}

// Mensagem de requisição
message RequestMessage {
  string subject = 1;
  bytes data = 2;
  int64 timestamp = 3;
  int32 timeout = 4;
}

// Requisição de inscrição
message SubscribeRequest {
  string subject = 1;
  map<string, string> metadata = 2;
}

// Resposta de inscrição
message SubscribeResponse {
  bool success = 1;
  string error = 2;
}

// Requisição de cancelamento de inscrição
message UnsubscribeRequest {
  string subject = 1;
}

// Resposta de cancelamento de inscrição
message UnsubscribeResponse {
  bool success = 1;
  string error = 2;
}

// Resposta de publicação
message PublishResponse {
  bool success = 1;
  string error = 2;
  string message_id = 3;
} 